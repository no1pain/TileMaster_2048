{"mappings":"C,A,W,S,E,C,E,O,G,E,U,C,E,O,C,C,C,IKA+B,EAAK,E,E,C,EGApC,SAAS,EAAqB,CAAG,CAAE,CAAG,EAC9B,CAAA,AAAO,MAAP,GAAe,EAAM,EAAI,MAAM,AAAN,GAAQ,CAAA,EAAM,EAAI,MAAM,AAAN,EAE/C,IAAK,IAAI,EAAI,EAAG,EAAO,AAAI,MAAM,GAAM,EAAI,EAAK,IAAK,CAAI,CAAC,EAAE,CAAG,CAAG,CAAC,EAAE,CAErE,OAAO,CACX,CFDA,SAAS,EAAqB,CAAG,EAC7B,OAAO,AAAA,SCJmB,CAAG,EAC7B,GAAI,MAAM,OAAO,CAAC,GAAM,OAAO,AAAA,EAAqB,EACxD,EDEgC,IAAQ,AAAA,SGNZ,CAAI,EAC5B,GAAI,AAAkB,aAAlB,OAAO,QAA0B,AAAyB,MAAzB,CAAI,CAAC,OAAO,QAAQ,CAAC,EAAY,AAAsB,MAAtB,CAAI,CAAC,aAAa,CACpF,OAAO,MAAM,IAAI,CAAC,EAE1B,EHE2D,IAAQ,AAAA,SKJ3B,CAAC,CAAE,CAAM,EAC7C,GAAK,GACL,GAAI,AAAa,UAAb,OAAO,EAAgB,OAAO,AAAA,EAAqB,EAFhB,KAAA,GAIvC,IAAI,EAAI,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,EAAG,IAGnD,GADU,WAAN,GAAkB,EAAE,WAAW,EAAE,CAAA,EAAI,EAAE,WAAW,CAAC,IAAI,AAAJ,EACnD,AAAM,QAAN,GAAe,AAAM,QAAN,EAAa,OAAO,MAAM,IAAI,CAAC,GAClD,GAAI,AAAM,cAAN,GAAqB,2CAA2C,IAAI,CAAC,GAAI,OAAO,AAAA,EAAqB,EARlE,KAAA,GAS3C,ELLkG,IAAQ,AAAA,WILtG,MAAM,AAAI,UAAU,uIACxB,GJKA,CJLA,IAAM,EAAA,WAAA,EAAN,eESoC,EFT9B,SAAA,IASF,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAe,CACb,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACb,EAdC,AAAA,SCFqB,CAAQ,CAAE,CAAW,EAC5C,GAAI,CAAE,CAAA,aAAoB,CAAA,EAAc,MAAM,AAAI,UAAU,oCAChE,EDAM,IAAA,CAAA,GAgBF,IAAI,CAAC,MAAM,CAhBT,EAgBiB,MAAM,CAAC,IAAI,CAC9B,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,YAAY,CAAG,EACpB,IAAI,CAAC,KAAK,CAAG,EAAa,GAAG,CAAC,SAAC,CAA/B,EAAwC,OAAA,AAAA,EAAG,E,E,CAnBzC,OES8B,EFT9B,C,CAsBJ,IAAA,WAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,AACnB,C,E,CAEA,IAAA,WAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,AACnB,C,E,CAEA,IAAA,YAAA,MAAA,WACE,OAAO,IAAI,CAAC,MAAM,AACpB,C,E,CAEA,IAAA,WAAA,MAAA,W,I,E,I,CACE,GAAI,IAAI,CAAC,SAAS,KAnChB,EAmC4B,MAAM,CAAC,OAAO,EAI5C,IAAI,EAAU,CAAA,EACR,EAAW,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAC,CAAjC,EAIE,IAAK,IAHC,EAAc,EAAI,MAAM,CAAC,SAAC,CAAhC,EAAyC,OAAA,AAAS,IAAT,C,GACnC,EAAS,EAAE,CAER,EAAI,EAAG,EAAI,EAAY,MAAM,CAAE,IACtC,GAAI,CAAW,CAAC,EAAE,GAAK,CAAW,CAAC,EAAI,EAAE,CAAE,CACzC,IAAM,EAAc,AAAiB,EAAjB,CAAW,CAAC,EAAE,CAElC,EAAO,IAAI,CAAC,GACZ,EAAK,KAAK,EAAI,EACd,IACA,EAAU,CAAA,CACZ,MACE,EAAO,IAAI,CAAC,CAAW,CAAC,EAAE,EAI9B,KAAO,EAAO,MAAM,CAAG,EAAI,MAAM,EAC/B,EAAO,IAAI,CAAC,GAOd,OAJK,GAAY,EAAI,KAAK,CAAC,SAAC,CAAA,CAAM,CAAlC,EAA4C,OAAA,IAAS,CAAM,CAAC,EAAM,AAChE,IAAA,CAAA,EAAU,CAAA,CAAV,EAGK,CACT,GASA,OAPI,IACF,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,OAAO,GACZ,IAAI,CAAC,QAAQ,GACb,IAAI,CAAC,WAAW,IAGX,EACT,C,E,CAEA,IAAA,YAAA,MAAA,W,I,E,I,CACE,GAAI,IAAI,CAAC,SAAS,KA/EhB,EA+E4B,MAAM,CAAC,OAAO,EAI5C,IAAI,EAAU,CAAA,EACR,EAAW,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAC,CAAjC,EAIE,IAAK,IAHC,EAAc,EAAI,MAAM,CAAC,SAAC,CAAhC,EAAyC,OAAA,AAAS,IAAT,C,GACnC,EAAS,EAAE,CAER,EAAI,EAAY,MAAM,CAAG,EAAG,GAAK,EAAG,IAC3C,GAAI,CAAW,CAAC,EAAE,GAAK,CAAW,CAAC,EAAI,EAAE,CAAE,CACzC,IAAM,EAAc,AAAiB,EAAjB,CAAW,CAAC,EAAE,CAElC,EAAO,OAAO,CAAC,GACf,EAAK,KAAK,EAAI,EACd,IACA,EAAU,CAAA,CACZ,MACE,EAAO,OAAO,CAAC,CAAW,CAAC,EAAE,EAIjC,KAAO,EAAO,MAAM,CAAG,EAAI,MAAM,EAC/B,EAAO,OAAO,CAAC,GAOjB,OAJK,GAAY,EAAI,KAAK,CAAC,SAAC,CAAA,CAAM,CAAlC,EAA4C,OAAA,IAAS,CAAM,CAAC,EAAM,AAChE,IAAA,CAAA,EAAU,CAAA,CAAV,EAGK,CACT,GASA,OAPI,IACF,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,OAAO,GACZ,IAAI,CAAC,QAAQ,GACb,IAAI,CAAC,WAAW,IAGX,EACT,C,E,CAEA,IAAA,SAAA,MAAA,WACE,GAAI,IAAI,CAAC,SAAS,KA3HhB,EA2H4B,MAAM,CAAC,OAAO,EAO5C,IAAK,IAHD,EAAU,CAAA,EACR,EAAW,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAC,CAAjC,EAA0C,OAAA,AAAA,EAAG,E,GAEpC,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAE,IAAK,CAG7C,IAAK,IAFC,EAAiB,EAAE,CAEhB,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IACZ,IAArB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAClB,EAAe,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAMxC,IAAK,IAFC,EAAY,EAAE,CAEX,EAAI,EAAG,EAAI,EAAe,MAAM,CAAE,IACzC,GAAI,CAAc,CAAC,EAAE,GAAK,CAAc,CAAC,EAAI,EAAE,CAAE,CAC/C,IAAM,EAAc,AAAoB,EAApB,CAAc,CAAC,EAAE,CAErC,EAAU,IAAI,CAAC,GACf,IAAI,CAAC,KAAK,EAAI,EACd,IACA,EAAU,CAAA,CACZ,MACE,EAAU,IAAI,CAAC,CAAc,CAAC,EAAE,EAIpC,KAAO,EAAU,MAAM,CAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EACzC,EAAU,IAAI,CAAC,GAGjB,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IACjC,CAAQ,CAAC,EAAE,CAAC,EAAE,GAAK,CAAS,CAAC,EAAE,GACjC,CAAQ,CAAC,EAAE,CAAC,EAAE,CAAG,CAAS,CAAC,EAAE,CAC7B,EAAU,CAAA,EAGhB,CASA,OAPI,IACF,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,OAAO,GACZ,IAAI,CAAC,QAAQ,GACb,IAAI,CAAC,WAAW,IAGX,EACT,C,E,CAEA,IAAA,WAAA,MAAA,WACE,GAAI,IAAI,CAAC,SAAS,KAjLhB,EAiL4B,MAAM,CAAC,OAAO,EAO5C,IAAK,IAHD,EAAU,CAAA,EACR,EAAW,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAC,CAAjC,EAA0C,OAAA,AAAA,EAAG,E,GAEpC,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAE,IAAK,CAG7C,IAAK,IAFC,EAAiB,EAAE,CAEhB,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAG,EAAG,GAAK,EAAG,IACjB,IAArB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAClB,EAAe,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAMxC,IAAK,IAFC,EAAY,EAAE,CAEX,EAAI,EAAG,EAAI,EAAe,MAAM,CAAE,IACzC,GAAI,CAAc,CAAC,EAAE,GAAK,CAAc,CAAC,EAAI,EAAE,CAAE,CAC/C,IAAM,EAAc,AAAoB,EAApB,CAAc,CAAC,EAAE,CAErC,EAAU,OAAO,CAAC,GAClB,IAAI,CAAC,KAAK,EAAI,EACd,IACA,EAAU,CAAA,CACZ,MACE,EAAU,OAAO,CAAC,CAAc,CAAC,EAAE,EAIvC,KAAO,EAAU,MAAM,CAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EACzC,EAAU,OAAO,CAAC,GAGpB,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IACjC,CAAQ,CAAC,EAAE,CAAC,EAAE,GAAK,CAAS,CAAC,EAAE,GACjC,CAAQ,CAAC,EAAE,CAAC,EAAE,CAAG,CAAS,CAAC,EAAE,CAC7B,EAAU,CAAA,EAGhB,CASA,OAPI,IACF,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,OAAO,GACZ,IAAI,CAAC,QAAQ,GACb,IAAI,CAAC,WAAW,IAGX,EACT,C,E,CAEA,IAAA,QAAA,MAAA,WACE,IAAI,CAAC,MAAM,CAvOT,EAuOiB,MAAM,CAAC,OAAO,CACjC,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAC,CAApC,EAA6C,OAAA,AAAA,EAAG,E,GAChD,IAAI,CAAC,OAAO,GACZ,IAAI,CAAC,OAAO,GACZ,IAAI,CAAC,QAAQ,EACf,C,E,CAEA,IAAA,UAAA,MAAA,WACE,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,MAAM,CAhPT,EAgPiB,MAAM,CAAC,IAAI,CAC9B,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAC,CAApC,EAA6C,OAAA,AAAA,EAAG,E,GAChD,IAAI,CAAC,QAAQ,EACf,C,E,CAEA,IAAA,UAAA,MAAA,WAGE,IAAK,IAFC,EAAa,EAAE,CAEZ,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IACrC,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAE,IACf,IAArB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAClB,EAAW,IAAI,CAAC,CAAE,EAAG,EAAG,EAAG,CAAE,GAKnC,GAAI,AAAsB,IAAtB,EAAW,MAAM,EAIrB,IAAM,EAAc,IAAI,CAAC,eAAe,CAAC,EAAW,MAAM,EACzC,EAAA,CAAU,CAAC,EAAY,CAAhC,EAAS,EAAT,CAAA,CAAG,EAAM,EAAN,CAAX,CACM,EAAW,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAC,CAAjC,EAA0C,OAAA,AAAA,EAAG,E,EAE7C,CAAA,CAAQ,CAAC,EAAE,CAAC,EAAE,CAAG,IAAI,CAAC,aAAa,GACnC,IAAI,CAAC,KAAK,CAAG,EACf,C,E,CAEA,IAAA,WAAA,MAAA,WACE,IAAM,EAAQ,SAAS,gBAAgB,CAAC,eAClC,EAAc,IAAI,CAAC,KAAK,CAAC,IAAI,GAEnC,GAAI,AAAiB,IAAjB,EAAM,MAAM,CAIhB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAY,MAAM,CAAE,IAAK,CAC3C,IAAM,EAAc,CAAK,CAAC,EAAE,CACtB,EAAe,CAAW,CAAC,EAAE,CAE9B,IAIL,EAAY,SAAS,CAAG,aAEpB,EAAe,GACjB,EAAY,WAAW,CAAG,EAC1B,EAAY,SAAS,CAAC,GAAG,CAAE,eAA2B,MAAA,CAAb,KAEzC,EAAY,WAAW,CAAG,GAE9B,CACF,C,E,CAEA,IAAA,kBAAA,MAAA,SAAgB,CAAG,EACjB,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,EACpC,C,E,CAEA,IAAA,gBAAA,MAAA,WACE,OAAO,AAAgB,GAAhB,KAAK,MAAM,GAAW,EAAI,CACnC,C,E,CAEA,IAAA,cAAA,MAAA,WAIE,IAAK,IAHD,EAAU,CAAA,EACV,EAAW,CAAA,EAEN,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IACrC,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAE,IACxC,GAAI,AAAqB,OAArB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAW,CAC7B,IAAI,CAAC,MAAM,CAtTf,EAsTuB,MAAM,CAAC,GAAG,CAE7B,MACF,CAIJ,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IAAK,CAC1C,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAG,EAAG,IAC5C,GAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,GAAK,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAI,EAAE,CAAE,CAC7C,EAAW,CAAA,EACX,KACF,CAGF,GAAI,EACF,KAEJ,CAEA,GAAI,CAAC,EACH,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAG,EAAG,IAAK,CAC9C,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAE,IACxC,GAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,GAAK,IAAI,CAAC,KAAK,CAAC,EAAI,EAAE,CAAC,EAAE,CAAE,CAC7C,EAAW,CAAA,EACX,KACF,CAGF,GAAI,EACF,KAEJ,CAGF,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,IAAK,CAC1C,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAE,IACxC,GAAI,AAAqB,IAArB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAQ,CAC1B,EAAU,CAAA,EACV,KACF,CAGF,GAAI,EACF,KAEJ,CAEK,GAAY,GACf,CAAA,IAAI,CAAC,MAAM,CAAG,EAAK,MAAM,CAAC,IAAI,AAAJ,CAE9B,C,E,CE/VkB,AAZpB,SAA2B,CAAM,CAAE,CAAK,EACpC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAAK,CACnC,IAAI,EAAa,CAAK,CAAC,EAAE,AACzB,CAAA,EAAW,UAAU,CAAG,EAAW,UAAU,EAAI,CAAA,EACjD,EAAW,YAAY,CAAG,CAAA,EAEtB,UAAW,GAAY,CAAA,EAAW,QAAQ,CAAG,CAAA,CAAjD,EAEA,OAAO,cAAc,CAAC,EAAQ,EAAW,GAAG,CAAE,EAClD,CACJ,EAEsC,AFVhC,EEU4C,SAAS,CAAE,GFVvD,C,IGF8B,EHGlB,CACd,KAAM,OACN,QAAS,UACT,IAAK,MACL,KAAM,MACR,EGPM,CADuB,EHGtB,YADH,EGAE,OAAO,cAAc,CHAvB,EGA6B,EAAK,CAAE,MAAO,EAAO,WAAY,CAAA,EAAM,aAAc,CAAA,EAAM,SAAU,CAAA,CAAK,GAClG,AHDL,CGCQ,CAAC,EAAI,CAAG,EJCtB,IAAM,EAAO,GAAI,WAAA,EAAA,CAAA,EC0WjB,EAAiB,ED1WA,EAEX,EAAc,SAAS,aAAa,CAAC,UACrC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAc,SAAS,aAAa,CAAC,iBACrC,EAAa,SAAS,gBAAgB,CAAC,gBACvC,EAAY,SAAS,aAAa,CAAC,eAoDzC,SAAS,IACP,EAAU,WAAW,CAAG,EAAK,QAAQ,EACvC,CApDA,EAAY,gBAAgB,CAAC,QAAS,WAChC,EAAY,SAAS,CAAC,QAAQ,CAAC,UACjC,EAAK,KAAK,GACV,EAAY,SAAS,CAAG,iBACxB,EAAY,SAAS,CAAG,UACxB,EAAa,SAAS,CAAC,GAAG,CAAC,UAC3B,EAAY,SAAS,CAAC,GAAG,CAAC,UAC1B,EAAW,SAAS,CAAC,GAAG,CAAC,UAEzB,KACS,EAAY,SAAS,CAAC,QAAQ,CAAC,aACxC,EAAK,OAAO,GACZ,EAAY,SAAS,CAAG,eACxB,EAAY,SAAS,CAAG,QACxB,EAAa,SAAS,CAAC,MAAM,CAAC,UAC9B,EAAY,SAAS,CAAC,GAAG,CAAC,UAC1B,EAAW,SAAS,CAAC,GAAG,CAAC,UAEzB,IAEJ,GAEA,SAAS,gBAAgB,CAAC,UAAW,SAAC,CAAtC,EACE,OAAQ,EAAE,GAAG,EACX,IAAK,YACH,EAAK,QAAQ,GACb,KACF,KAAK,aACH,EAAK,SAAS,GACd,KACF,KAAK,UACH,EAAK,MAAM,GACX,KACF,KAAK,YACH,EAAK,QAAQ,EAEjB,CAEA,IAKI,EAAK,SAAS,KAAO,AAAA,WAAA,EAAA,EAAA,GAAK,MAAM,CAAC,IAAI,CACvC,EAAY,SAAS,CAAC,MAAM,CAAC,UACpB,EAAK,SAAS,KAAO,AAAA,WAAA,EAAA,EAAA,GAAK,MAAM,CAAC,GAAG,EAC7C,EAAW,SAAS,CAAC,MAAM,CAAC,SANhC,E","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$71511d61b312f219(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.status = Game.STATUS.idle;\n        this.score = 0;\n        this.initialState = initialState;\n        this.state = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        });\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                if (this.getStatus() !== Game.STATUS.playing) return;\n                var canMove = false;\n                var newState = this.state.map(function(row) {\n                    var filteredRow = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    var newRow = [];\n                    for(var i = 0; i < filteredRow.length; i++)if (filteredRow[i] === filteredRow[i + 1]) {\n                        var mergedValue = filteredRow[i] * 2;\n                        newRow.push(mergedValue);\n                        _this.score += mergedValue;\n                        i++;\n                        canMove = true;\n                    } else newRow.push(filteredRow[i]);\n                    while(newRow.length < row.length)newRow.push(0);\n                    if (!canMove && !row.every(function(cell, index) {\n                        return cell === newRow[index];\n                    })) canMove = true;\n                    return newRow;\n                });\n                if (canMove) {\n                    this.state = newState;\n                    this.addCell();\n                    this.setState();\n                    this.checkStatus();\n                }\n                return canMove;\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                if (this.getStatus() !== Game.STATUS.playing) return;\n                var canMove = false;\n                var newState = this.state.map(function(row) {\n                    var filteredRow = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    var newRow = [];\n                    for(var i = filteredRow.length - 1; i >= 0; i--)if (filteredRow[i] === filteredRow[i - 1]) {\n                        var mergedValue = filteredRow[i] * 2;\n                        newRow.unshift(mergedValue);\n                        _this.score += mergedValue;\n                        i--;\n                        canMove = true;\n                    } else newRow.unshift(filteredRow[i]);\n                    while(newRow.length < row.length)newRow.unshift(0);\n                    if (!canMove && !row.every(function(cell, index) {\n                        return cell === newRow[index];\n                    })) canMove = true;\n                    return newRow;\n                });\n                if (canMove) {\n                    this.state = newState;\n                    this.addCell();\n                    this.setState();\n                    this.checkStatus();\n                }\n                return canMove;\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (this.getStatus() !== Game.STATUS.playing) return;\n                var canMove = false;\n                var newState = this.state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                for(var c = 0; c < this.state[0].length; c++){\n                    var filteredColumn = [];\n                    for(var r = 0; r < this.state.length; r++)if (this.state[r][c] !== 0) filteredColumn.push(this.state[r][c]);\n                    var newColumn = [];\n                    for(var i = 0; i < filteredColumn.length; i++)if (filteredColumn[i] === filteredColumn[i + 1]) {\n                        var mergedValue = filteredColumn[i] * 2;\n                        newColumn.push(mergedValue);\n                        this.score += mergedValue;\n                        i++;\n                        canMove = true;\n                    } else newColumn.push(filteredColumn[i]);\n                    while(newColumn.length < this.state.length)newColumn.push(0);\n                    for(var r1 = 0; r1 < this.state.length; r1++)if (newState[r1][c] !== newColumn[r1]) {\n                        newState[r1][c] = newColumn[r1];\n                        canMove = true;\n                    }\n                }\n                if (canMove) {\n                    this.state = newState;\n                    this.addCell();\n                    this.setState();\n                    this.checkStatus();\n                }\n                return canMove;\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (this.getStatus() !== Game.STATUS.playing) return;\n                var canMove = false;\n                var newState = this.state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                for(var c = 0; c < this.state[0].length; c++){\n                    var filteredColumn = [];\n                    for(var r = this.state.length - 1; r >= 0; r--)if (this.state[r][c] !== 0) filteredColumn.push(this.state[r][c]);\n                    var newColumn = [];\n                    for(var i = 0; i < filteredColumn.length; i++)if (filteredColumn[i] === filteredColumn[i + 1]) {\n                        var mergedValue = filteredColumn[i] * 2;\n                        newColumn.unshift(mergedValue);\n                        this.score += mergedValue;\n                        i++;\n                        canMove = true;\n                    } else newColumn.unshift(filteredColumn[i]);\n                    while(newColumn.length < this.state.length)newColumn.unshift(0);\n                    for(var r1 = 0; r1 < this.state.length; r1++)if (newState[r1][c] !== newColumn[r1]) {\n                        newState[r1][c] = newColumn[r1];\n                        canMove = true;\n                    }\n                }\n                if (canMove) {\n                    this.state = newState;\n                    this.addCell();\n                    this.setState();\n                    this.checkStatus();\n                }\n                return canMove;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = Game.STATUS.playing;\n                this.state = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                this.addCell();\n                this.addCell();\n                this.setState();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.score = 0;\n                this.status = Game.STATUS.idle;\n                this.state = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                this.setState();\n            }\n        },\n        {\n            key: \"addCell\",\n            value: function addCell() {\n                var emptyCells = [];\n                for(var i = 0; i < this.state.length; i++){\n                    for(var j = 0; j < this.state[i].length; j++)if (this.state[i][j] === 0) emptyCells.push({\n                        r: i,\n                        c: j\n                    });\n                }\n                if (emptyCells.length === 0) return;\n                var randomIndex = this.addRandomNumber(emptyCells.length);\n                var _emptyCells_randomIndex = emptyCells[randomIndex], r = _emptyCells_randomIndex.r, c = _emptyCells_randomIndex.c;\n                var newState = this.state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                newState[r][c] = this.getRandomCell();\n                this.state = newState;\n            }\n        },\n        {\n            key: \"setState\",\n            value: function setState() {\n                var cells = document.querySelectorAll(\".field-cell\");\n                var stateValues = this.state.flat();\n                if (cells.length === 0) return;\n                for(var i = 0; i < stateValues.length; i++){\n                    var currentCell = cells[i];\n                    var currentValue = stateValues[i];\n                    if (!currentCell) continue;\n                    currentCell.className = \"field-cell\";\n                    if (currentValue > 0) {\n                        currentCell.textContent = currentValue;\n                        currentCell.classList.add(\"field-cell--\".concat(currentValue));\n                    } else currentCell.textContent = \"\";\n                }\n            }\n        },\n        {\n            key: \"addRandomNumber\",\n            value: function addRandomNumber(max) {\n                return Math.floor(Math.random() * max);\n            }\n        },\n        {\n            key: \"getRandomCell\",\n            value: function getRandomCell() {\n                return Math.random() < 0.9 ? 2 : 4;\n            }\n        },\n        {\n            key: \"checkStatus\",\n            value: function checkStatus() {\n                var canMove = false;\n                var canMerge = false;\n                for(var i = 0; i < this.state.length; i++){\n                    for(var j = 0; j < this.state[i].length; j++)if (this.state[i][j] === 2048) {\n                        this.status = Game.STATUS.win;\n                        return;\n                    }\n                }\n                for(var i1 = 0; i1 < this.state.length; i1++){\n                    for(var j1 = 0; j1 < this.state[i1].length - 1; j1++)if (this.state[i1][j1] === this.state[i1][j1 + 1]) {\n                        canMerge = true;\n                        break;\n                    }\n                    if (canMerge) break;\n                }\n                if (!canMerge) for(var i2 = 0; i2 < this.state.length - 1; i2++){\n                    for(var j2 = 0; j2 < this.state[i2].length; j2++)if (this.state[i2][j2] === this.state[i2 + 1][j2]) {\n                        canMerge = true;\n                        break;\n                    }\n                    if (canMerge) break;\n                }\n                for(var i3 = 0; i3 < this.state.length; i3++){\n                    for(var j3 = 0; j3 < this.state[i3].length; j3++)if (this.state[i3][j3] === 0) {\n                        canMove = true;\n                        break;\n                    }\n                    if (canMove) break;\n                }\n                if (!canMove && !canMerge) this.status = Game.STATUS.lose;\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"STATUS\", {\n    idle: \"idle\",\n    playing: \"playing\",\n    win: \"win\",\n    lose: \"lose\"\n});\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\n\"use strict\";\nvar $197cd56b15c33885$var$game = new (0, (/*@__PURE__*/$parcel$interopDefault($3d28d7f1aac198f5$exports)))();\nvar $197cd56b15c33885$var$startButton = document.querySelector(\".start\");\nvar $197cd56b15c33885$var$startMessage = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$loseMessage = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$winMessage = document.querySelectorAll(\".message-win\");\nvar $197cd56b15c33885$var$gameScore = document.querySelector(\".game-score\");\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$startButton.classList.contains(\"start\")) {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$startButton.classList = \"button restart\";\n        $197cd56b15c33885$var$startButton.innerHTML = \"Restart\";\n        $197cd56b15c33885$var$startMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$loseMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$winMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$getScore();\n    } else if ($197cd56b15c33885$var$startButton.classList.contains(\"restart\")) {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$startButton.classList = \"button start\";\n        $197cd56b15c33885$var$startButton.innerHTML = \"Start\";\n        $197cd56b15c33885$var$startMessage.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$loseMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$winMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$getScore();\n    }\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    switch(e.key){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n    }\n    $197cd56b15c33885$var$getScore();\n    $197cd56b15c33885$var$updateMessages();\n});\nfunction $197cd56b15c33885$var$updateMessages() {\n    if ($197cd56b15c33885$var$game.getStatus() === (0, (/*@__PURE__*/$parcel$interopDefault($3d28d7f1aac198f5$exports))).STATUS.lose) $197cd56b15c33885$var$loseMessage.classList.remove(\"hidden\");\n    else if ($197cd56b15c33885$var$game.getStatus() === (0, (/*@__PURE__*/$parcel$interopDefault($3d28d7f1aac198f5$exports))).STATUS.win) $197cd56b15c33885$var$winMessage.classList.remove(\"hidden\");\n}\nfunction $197cd56b15c33885$var$getScore() {\n    $197cd56b15c33885$var$gameScore.textContent = $197cd56b15c33885$var$game.getScore();\n}\n\n})();\n//# sourceMappingURL=index.e9b0eb0a.js.map\n","'use strict';\r\n\r\nimport Game from '../modules/Game.class';\r\n\r\nconst game = new Game();\r\n\r\nconst startButton = document.querySelector('.start');\r\nconst startMessage = document.querySelector('.message-start');\r\nconst loseMessage = document.querySelector('.message-lose');\r\nconst winMessage = document.querySelectorAll('.message-win');\r\nconst gameScore = document.querySelector('.game-score');\r\n\r\nstartButton.addEventListener('click', () => {\r\n  if (startButton.classList.contains('start')) {\r\n    game.start();\r\n    startButton.classList = 'button restart';\r\n    startButton.innerHTML = 'Restart';\r\n    startMessage.classList.add('hidden');\r\n    loseMessage.classList.add('hidden');\r\n    winMessage.classList.add('hidden');\r\n\r\n    getScore();\r\n  } else if (startButton.classList.contains('restart')) {\r\n    game.restart();\r\n    startButton.classList = 'button start';\r\n    startButton.innerHTML = 'Start';\r\n    startMessage.classList.remove('hidden');\r\n    loseMessage.classList.add('hidden');\r\n    winMessage.classList.add('hidden');\r\n\r\n    getScore();\r\n  }\r\n});\r\n\r\ndocument.addEventListener('keydown', (e) => {\r\n  switch (e.key) {\r\n    case 'ArrowLeft':\r\n      game.moveLeft();\r\n      break;\r\n    case 'ArrowRight':\r\n      game.moveRight();\r\n      break;\r\n    case 'ArrowUp':\r\n      game.moveUp();\r\n      break;\r\n    case 'ArrowDown':\r\n      game.moveDown();\r\n      break;\r\n  }\r\n\r\n  getScore();\r\n  updateMessages();\r\n});\r\n\r\nfunction updateMessages() {\r\n  if (game.getStatus() === Game.STATUS.lose) {\r\n    loseMessage.classList.remove('hidden');\r\n  } else if (game.getStatus() === Game.STATUS.win) {\r\n    winMessage.classList.remove('hidden');\r\n  }\r\n}\r\n\r\nfunction getScore() {\r\n  gameScore.textContent = game.getScore();\r\n}\r\n","'use strict';\r\n\r\nclass Game {\r\n  static STATUS = {\r\n    idle: 'idle',\r\n    playing: 'playing',\r\n    win: 'win',\r\n    lose: 'lose',\r\n  };\r\n\r\n  constructor(\r\n    initialState = [\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n    ],\r\n  ) {\r\n    this.status = Game.STATUS.idle;\r\n    this.score = 0;\r\n    this.initialState = initialState;\r\n    this.state = initialState.map((row) => [...row]);\r\n  }\r\n\r\n  getState() {\r\n    return this.state;\r\n  }\r\n\r\n  getScore() {\r\n    return this.score;\r\n  }\r\n\r\n  getStatus() {\r\n    return this.status;\r\n  }\r\n\r\n  moveLeft() {\r\n    if (this.getStatus() !== Game.STATUS.playing) {\r\n      return;\r\n    }\r\n\r\n    let canMove = false;\r\n    const newState = this.state.map((row) => {\r\n      const filteredRow = row.filter((cell) => cell !== 0);\r\n      const newRow = [];\r\n\r\n      for (let i = 0; i < filteredRow.length; i++) {\r\n        if (filteredRow[i] === filteredRow[i + 1]) {\r\n          const mergedValue = filteredRow[i] * 2;\r\n\r\n          newRow.push(mergedValue);\r\n          this.score += mergedValue;\r\n          i++;\r\n          canMove = true;\r\n        } else {\r\n          newRow.push(filteredRow[i]);\r\n        }\r\n      }\r\n\r\n      while (newRow.length < row.length) {\r\n        newRow.push(0);\r\n      }\r\n\r\n      if (!canMove && !row.every((cell, index) => cell === newRow[index])) {\r\n        canMove = true;\r\n      }\r\n\r\n      return newRow;\r\n    });\r\n\r\n    if (canMove) {\r\n      this.state = newState;\r\n      this.addCell();\r\n      this.setState();\r\n      this.checkStatus();\r\n    }\r\n\r\n    return canMove;\r\n  }\r\n\r\n  moveRight() {\r\n    if (this.getStatus() !== Game.STATUS.playing) {\r\n      return;\r\n    }\r\n\r\n    let canMove = false;\r\n    const newState = this.state.map((row) => {\r\n      const filteredRow = row.filter((cell) => cell !== 0);\r\n      const newRow = [];\r\n\r\n      for (let i = filteredRow.length - 1; i >= 0; i--) {\r\n        if (filteredRow[i] === filteredRow[i - 1]) {\r\n          const mergedValue = filteredRow[i] * 2;\r\n\r\n          newRow.unshift(mergedValue);\r\n          this.score += mergedValue;\r\n          i--;\r\n          canMove = true;\r\n        } else {\r\n          newRow.unshift(filteredRow[i]);\r\n        }\r\n      }\r\n\r\n      while (newRow.length < row.length) {\r\n        newRow.unshift(0);\r\n      }\r\n\r\n      if (!canMove && !row.every((cell, index) => cell === newRow[index])) {\r\n        canMove = true;\r\n      }\r\n\r\n      return newRow;\r\n    });\r\n\r\n    if (canMove) {\r\n      this.state = newState;\r\n      this.addCell();\r\n      this.setState();\r\n      this.checkStatus();\r\n    }\r\n\r\n    return canMove;\r\n  }\r\n\r\n  moveUp() {\r\n    if (this.getStatus() !== Game.STATUS.playing) {\r\n      return;\r\n    }\r\n\r\n    let canMove = false;\r\n    const newState = this.state.map((row) => [...row]);\r\n\r\n    for (let c = 0; c < this.state[0].length; c++) {\r\n      const filteredColumn = [];\r\n\r\n      for (let r = 0; r < this.state.length; r++) {\r\n        if (this.state[r][c] !== 0) {\r\n          filteredColumn.push(this.state[r][c]);\r\n        }\r\n      }\r\n\r\n      const newColumn = [];\r\n\r\n      for (let i = 0; i < filteredColumn.length; i++) {\r\n        if (filteredColumn[i] === filteredColumn[i + 1]) {\r\n          const mergedValue = filteredColumn[i] * 2;\r\n\r\n          newColumn.push(mergedValue);\r\n          this.score += mergedValue;\r\n          i++;\r\n          canMove = true;\r\n        } else {\r\n          newColumn.push(filteredColumn[i]);\r\n        }\r\n      }\r\n\r\n      while (newColumn.length < this.state.length) {\r\n        newColumn.push(0);\r\n      }\r\n\r\n      for (let r = 0; r < this.state.length; r++) {\r\n        if (newState[r][c] !== newColumn[r]) {\r\n          newState[r][c] = newColumn[r];\r\n          canMove = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (canMove) {\r\n      this.state = newState;\r\n      this.addCell();\r\n      this.setState();\r\n      this.checkStatus();\r\n    }\r\n\r\n    return canMove;\r\n  }\r\n\r\n  moveDown() {\r\n    if (this.getStatus() !== Game.STATUS.playing) {\r\n      return;\r\n    }\r\n\r\n    let canMove = false;\r\n    const newState = this.state.map((row) => [...row]);\r\n\r\n    for (let c = 0; c < this.state[0].length; c++) {\r\n      const filteredColumn = [];\r\n\r\n      for (let r = this.state.length - 1; r >= 0; r--) {\r\n        if (this.state[r][c] !== 0) {\r\n          filteredColumn.push(this.state[r][c]);\r\n        }\r\n      }\r\n\r\n      const newColumn = [];\r\n\r\n      for (let i = 0; i < filteredColumn.length; i++) {\r\n        if (filteredColumn[i] === filteredColumn[i + 1]) {\r\n          const mergedValue = filteredColumn[i] * 2;\r\n\r\n          newColumn.unshift(mergedValue);\r\n          this.score += mergedValue;\r\n          i++;\r\n          canMove = true;\r\n        } else {\r\n          newColumn.unshift(filteredColumn[i]);\r\n        }\r\n      }\r\n\r\n      while (newColumn.length < this.state.length) {\r\n        newColumn.unshift(0);\r\n      }\r\n\r\n      for (let r = 0; r < this.state.length; r++) {\r\n        if (newState[r][c] !== newColumn[r]) {\r\n          newState[r][c] = newColumn[r];\r\n          canMove = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (canMove) {\r\n      this.state = newState;\r\n      this.addCell();\r\n      this.setState();\r\n      this.checkStatus();\r\n    }\r\n\r\n    return canMove;\r\n  }\r\n\r\n  start() {\r\n    this.status = Game.STATUS.playing;\r\n    this.state = this.initialState.map((row) => [...row]);\r\n    this.addCell();\r\n    this.addCell();\r\n    this.setState();\r\n  }\r\n\r\n  restart() {\r\n    this.score = 0;\r\n    this.status = Game.STATUS.idle;\r\n    this.state = this.initialState.map((row) => [...row]);\r\n    this.setState();\r\n  }\r\n\r\n  addCell() {\r\n    const emptyCells = [];\r\n\r\n    for (let i = 0; i < this.state.length; i++) {\r\n      for (let j = 0; j < this.state[i].length; j++) {\r\n        if (this.state[i][j] === 0) {\r\n          emptyCells.push({ r: i, c: j });\r\n        }\r\n      }\r\n    }\r\n\r\n    if (emptyCells.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const randomIndex = this.addRandomNumber(emptyCells.length);\r\n    const { r, c } = emptyCells[randomIndex];\r\n    const newState = this.state.map((row) => [...row]);\r\n\r\n    newState[r][c] = this.getRandomCell();\r\n    this.state = newState;\r\n  }\r\n\r\n  setState() {\r\n    const cells = document.querySelectorAll('.field-cell');\r\n    const stateValues = this.state.flat();\r\n\r\n    if (cells.length === 0) {\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < stateValues.length; i++) {\r\n      const currentCell = cells[i];\r\n      const currentValue = stateValues[i];\r\n\r\n      if (!currentCell) {\r\n        continue;\r\n      }\r\n\r\n      currentCell.className = 'field-cell';\r\n\r\n      if (currentValue > 0) {\r\n        currentCell.textContent = currentValue;\r\n        currentCell.classList.add(`field-cell--${currentValue}`);\r\n      } else {\r\n        currentCell.textContent = '';\r\n      }\r\n    }\r\n  }\r\n\r\n  addRandomNumber(max) {\r\n    return Math.floor(Math.random() * max);\r\n  }\r\n\r\n  getRandomCell() {\r\n    return Math.random() < 0.9 ? 2 : 4;\r\n  }\r\n\r\n  checkStatus() {\r\n    let canMove = false;\r\n    let canMerge = false;\r\n\r\n    for (let i = 0; i < this.state.length; i++) {\r\n      for (let j = 0; j < this.state[i].length; j++) {\r\n        if (this.state[i][j] === 2048) {\r\n          this.status = Game.STATUS.win;\r\n\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.state.length; i++) {\r\n      for (let j = 0; j < this.state[i].length - 1; j++) {\r\n        if (this.state[i][j] === this.state[i][j + 1]) {\r\n          canMerge = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (canMerge) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!canMerge) {\r\n      for (let i = 0; i < this.state.length - 1; i++) {\r\n        for (let j = 0; j < this.state[i].length; j++) {\r\n          if (this.state[i][j] === this.state[i + 1][j]) {\r\n            canMerge = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (canMerge) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.state.length; i++) {\r\n      for (let j = 0; j < this.state[i].length; j++) {\r\n        if (this.state[i][j] === 0) {\r\n          canMove = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (canMove) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!canMove && !canMerge) {\r\n      this.status = Game.STATUS.lose;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = Game;\r\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$parcel$interopDefault","a","__esModule","default","key","value","$3d28d7f1aac198f5$exports","$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$3d28d7f1aac198f5$var$Game","protoProps","Game","initialState","arguments","instance","Constructor","status","STATUS","idle","score","state","map","row","_this","getStatus","playing","canMove","newState","filteredRow","filter","cell","newRow","mergedValue","push","every","index","addCell","setState","checkStatus","unshift","c","filteredColumn","r","newColumn","r1","emptyCells","j","randomIndex","addRandomNumber","_emptyCells_randomIndex","getRandomCell","cells","document","querySelectorAll","stateValues","flat","currentCell","currentValue","className","textContent","classList","add","concat","max","Math","floor","random","canMerge","win","i1","j1","i2","j2","i3","j3","lose","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","obj","$197cd56b15c33885$var$game","$197cd56b15c33885$var$startButton","querySelector","$197cd56b15c33885$var$startMessage","$197cd56b15c33885$var$loseMessage","$197cd56b15c33885$var$winMessage","$197cd56b15c33885$var$gameScore","$197cd56b15c33885$var$getScore","getScore","addEventListener","contains","start","innerHTML","restart","remove","e","moveLeft","moveRight","moveUp","moveDown"],"version":3,"file":"index.e9b0eb0a.js.map"}